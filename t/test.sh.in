#!/bin/sh

md5sum() {
	openssl md5 -r "$@"
}

x() {
	echo "$@"
	"$@"
}

fail() {
	(
		echo "FAIL $@"
		echo "last lines in log file:"
		echo
		tail -30 $logfile
		echo
	) >&2
	exit 1
}

blocksize=$(stat -f%k . || stat -c%o .) 2>/dev/null
expr "${blocksize}" : '^[1-9][0-9]*$' >/dev/null || \
    fail "Unable to determine filesystem block size"
echo "Using ${blocksize}-byte blocks"

# write file with holes, first block 2, then block 4, finally block 1
# and then block 3.
write_holy_file() {
    filename="$1"
    dd bs=${blocksize} seek=1 count=1 conv=notrunc \
	if=/dev/urandom of="$filename" > /dev/null 2>&1
    dd bs=${blocksize} seek=3 count=1 conv=notrunc \
	if=/dev/urandom of="$filename" > /dev/null 2>&1
    sleep 5
    dd bs=${blocksize} seek=0 count=1 conv=notrunc \
	if=/dev/urandom of="$filename" > /dev/null 2>&1
    sleep 5
    dd bs=${blocksize} seek=2 count=1 conv=notrunc \
	if=/dev/urandom of="$filename" > /dev/null 2>&1
}

set -e

tstdir="@abs_builddir@/t$$"
logfile="${tstdir}/log"
mapfile="${tstdir}/map"
srcdir="${tstdir}/src"
dstdir="${tstdir}/dst"

tsdfx="@abs_top_builddir@/bin/tsdfx/tsdfx"
copier="@abs_top_builddir@/libexec/copier/tsdfx-copier"
scanner="@abs_top_builddir@/libexec/scanner/tsdfx-scanner"

# How large should the file with random data be
randomsize=5000 # kiB

export TSDFX_COPIER="${copier}"
export TSDFX_SCANNER="${scanner}"

mkdir "${tstdir}" "${srcdir}" "${dstdir}"

cat >"${mapfile}" <<EOF
test: ${srcdir} => ${dstdir}
EOF

# Try to trigger scanner problem discovered 2015-10-28
echo "badfile, should be ignored" > "${srcdir}/$(printf "\002")"

echo test1 > "${srcdir}/test1"
echo 'test(2)' > "${srcdir}/test (2).txt"
echo test2 > "${srcdir}/test2"

dd bs=1k count=${randomsize} \
    if=/dev/urandom \
    of="${srcdir}/${randomsize}krandom" > /dev/null 2>&1

md5start=$(cd ${srcdir}; md5sum ${randomsize}krandom)

write_holy_file "${srcdir}/${randomsize}krandom-with-holes" &

echo "logging to ${logfile}"
x "${tsdfx}" -l "${logfile}" -m "${mapfile}" -1v

for good in test1 test2 ; do
	if [ ! -e "${dstdir}/${good}" ] ; then
		fail "missing: ${dstdir}/${good}"
	elif ! cmp -s "${srcdir}/${good}" "${dstdir}/${good}" ; then
		fail "incorrect: ${dstdir}/${good}"
	fi
done

for bad in "test (2).txt" ; do
	if [ -e "${bad}" ] ; then
		fail "should not exist: ${bad}"
	fi
done

hmd5src="$(cd "${srcdir}"; md5sum "${randomsize}krandom-with-holes")"
hmd5dst="$(cd "${dstdir}"; md5sum "${randomsize}krandom-with-holes")"
if [ "$hmd5src" != "$hmd5dst" ] ; then
    fail "File with hole changed MD5sum during transmission: $hmd5src != $hmd5dst"
else
    echo "All ok with holy file"
fi

md5end=$(cd ${dstdir}; md5sum ${randomsize}krandom)
if [ "$md5start" != "$md5end" ]; then
    fail "${randomsize}krandom file changed from source to destination"
fi

rm -rf "${tstdir}"
