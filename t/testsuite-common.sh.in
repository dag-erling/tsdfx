#!/bin/sh

md5sum() {
	openssl md5 -r "$@" | cut -d' ' -f1
}

x() {
	echo "$@"
	"$@"
}

notice() {
	echo "NOTICE $@" >&2
}

fail() {
	(
		[ -f "${pidfile}" ] && kill $(cat "${pidfile}")
		echo "FAIL $@"
		echo "last lines in log file:"
		echo
		tail -30 $logfile
		echo
		echo "source directory:"
		echo
		(cd "${tstdir}" && find src) | sort
		echo
		echo "dst directory:"
		echo
		(cd "${tstdir}" && find dst) | sort
	) >&2
	exit 1
}

setup_test() {
	set -e

	source="@abs_top_srcdir@"

	tstdir="@abs_builddir@/t$$"
	logfile="${tstdir}/log"
	mapfile="${tstdir}/map"
	pidfile="${tstdir}/pid"
	srcdir="${tstdir}/src"
	dstdir="${tstdir}/dst"

	tsdfx="@abs_top_builddir@/bin/tsdfx/tsdfx"
	copier="@abs_top_builddir@/libexec/copier/tsdfx-copier"
	scanner="@abs_top_builddir@/libexec/scanner/tsdfx-scanner"

	export TSDFX_COPIER="${copier}"
	export TSDFX_SCANNER="${scanner}"

	mkdir "${tstdir}" "${srcdir}" "${dstdir}"

	cat >"${mapfile}" <<EOF
test: ${srcdir} => ${dstdir}
EOF
}

set_blocksize() {
	local bsfile bs
	if [ -f "$1" ] ; then
		bsfile="$1"
	else
		if [ -z "$1" ] ; then
			bsfile="${tstdir}/bsfile"
		elif [ -d "$1" ] ; then
			bsfile="$1/bsfile"
		else
			fail "can't determine block size of $1"
		fi
		dd if=/dev/zero of="${bsfile}" bs=1048576 count=1
	fi
	blocksize=$(
		stat -f%k "${bsfile}"  2>/dev/null ||
		stat -c%o "${bsfile}" 2>/dev/null
	)
	if [ "${bsfile}" != "$1" ] ; then
		rm "${bsfile}"
	fi
	expr "${blocksize}" : '^[1-9][0-9]*$' >/dev/null || \
	    fail "Unable to determine filesystem block size"
	notice "Using ${blocksize}-byte blocks"
}

run_daemon() {
	echo "starting tsdfx with map:"
	sed 's/^/| /' "${mapfile}"
	echo "logging to ${logfile}"
	x "${tsdfx}" -v -l "${logfile}" -m "${mapfile}" -p "${pidfile}" "$@"
}

cleanup_test() {
	timeout=10
	elapsed=0
	while [ -f "${pidfile}" ] && kill $(cat "${pidfile}") ; do
		[ $((elapsed+=1)) -le "${timeout}" ] ||
			fail "timed out waiting for tsdfx to stop"
		sleep 1
	done
	chmod -R u+rwX "${tstdir}"
	rm -rf "${tstdir}"
}
